name: Deploy Simple-Web to AWS EC2 using AWS CLI
on:
  push:
    branches:
      - main
jobs:
  deploys:
    runs-on: ubuntu-latest
    steps:
      - name: 1.소스코드 가져오기
        uses: actions/checkout@v3
       # 현재 컨테이너는 깃 허브의 simple-web과 연결이 되어 있음
       # 어떤 코드를 가져올지 지정하지 않았기에 simple-web 레포에서 가져옴(다른곳에서 가져오려면 아래와 같이)
        # repository: other-user/repo-name     # ✅ 가져올 대상 레포 (owner/repo)
        # ref: main                             # ✅ 가져올 브랜치 (필수는 아님, default는 default 브랜치)
        # token: ${{ secrets.PERSONAL_TOKEN }}  # ✅ 개인 access token 필요 (공개 레포는 생략 가능)
      - name: 2.AWS 접속정보 설정
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: 2.SSH키 설정
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_KEY }}
      - name: 3.파일 목록보기
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}  "ls -al /home/${{ secrets.AWS_USER }}"
     # ssh 접속 시 클라이언트가 MITM 방지를 위해 접속하려는 서버의 공개키를 로컬에 저장
     # 추구 접속 시 공개키로 위변조를 확인하는데  -o StrictHostKeyChecking 는 그것을 보지 않겠다는 옵션
      - name: 4.파일 서버로 복사
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}  "sudo chown -R ec2-user:ec2-user /usr/share/nginx/html"
          scp -o StrictHostKeyChecking=no -r ./* ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/usr/share/nginx/html
          # 소스코드 받은것을 scp ./*로 모두 복사하기
      - name: Restart Web Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} "sudo systemctl restart nginx || sudo systemctl restart httpd"